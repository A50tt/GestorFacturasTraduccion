
package jud.gestorfacturas.gui.buscar;

import jud.gestorfacturas.gui.buscar.BuscarFacturaController;

public class BuscarFacturaView extends javax.swing.JPanel {

    BuscarFacturaController controller;
    
    public BuscarFacturaView(BuscarFacturaController _controller) {
        this.controller = _controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultadosTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        campoBusquedaComboBox = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        questionMarkImgLbl = new javax.swing.JLabel();
        ignoreCaseCheckBox = new javax.swing.JCheckBox();
        inputTextField = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 0, 0));
        setMinimumSize(new java.awt.Dimension(800, 0));
        setPreferredSize(new java.awt.Dimension(950, 661));

        jPanel1.setMinimumSize(new java.awt.Dimension(840, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(840, 661));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 402));
        jScrollPane2.setRowHeaderView(null);
        jScrollPane2.setViewportView(null);

        resultadosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num. Factura", "Fecha emisión", "Fecha venc.", "N.º Cliente", "Nombre", "Importe total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultadosTable.setFillsViewportHeight(true);
        resultadosTable.setMinimumSize(null);
        resultadosTable.setName(""); // NOI18N
        resultadosTable.setPreferredSize(null);
        resultadosTable.setShowGrid(true);
        resultadosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultadosTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(resultadosTable);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.add(campoBusquedaComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 160, 26));

        questionMarkImgLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/question_mark.png"))); // NOI18N
        questionMarkImgLbl.setToolTipText("<html>\n· Si la opción no está marcada, la búsqueda es sensible a mayúsculas y minúsculas.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Buscar por el texto <b>nombre</b> NO encontraría el resultado <b>Nombre</b>.<br>\n· Se puede utilizar el símbolo <b> * </b> como carácter comodín.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Por ejemplo, <b>*bc*</b> encontraría el texto <b>abcd</b>.<br>\n· Tratando con cifras, es posible usar los comparadores <b>&lt</b>, <b>&gt;</b>, <b>&lt=</b>, <b>&gt;=</b>.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; La búsqueda <b>&gt;=300</b> encontraría las cifras <b>mayores o igual a 300,00</b>.<br>\n</html>");
        questionMarkImgLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        ignoreCaseCheckBox.setText("Ignorar mayúsculas y minúsculas");
        ignoreCaseCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ignoreCaseCheckBoxStateChanged(evt);
            }
        });

        inputTextField.setPreferredSize(new java.awt.Dimension(64, 26));
        inputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ignoreCaseCheckBox)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(619, Short.MAX_VALUE)
                    .addComponent(questionMarkImgLbl)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ignoreCaseCheckBox)
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(questionMarkImgLbl)
                    .addContainerGap(39, Short.MAX_VALUE)))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 650, 70));

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resultadosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultadosTableMouseClicked
        controller.lookupAndOpenInvoice(resultadosTable.getSelectedRow());
    }//GEN-LAST:event_resultadosTableMouseClicked

    private void inputTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextFieldKeyReleased
        if (inputTextField.getText().equals("")) {
            controller.lookupAllInvoices();
        } else {
            controller.lookupInvoice();
        }
    }//GEN-LAST:event_inputTextFieldKeyReleased

    private void ignoreCaseCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ignoreCaseCheckBoxStateChanged
        if (inputTextField.getText().equals("")) {
            controller.lookupAllInvoices();
        } else {
            controller.lookupInvoice();
        }
    }//GEN-LAST:event_ignoreCaseCheckBoxStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> campoBusquedaComboBox;
    public javax.swing.JCheckBox ignoreCaseCheckBox;
    public javax.swing.JTextField inputTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel questionMarkImgLbl;
    public javax.swing.JTable resultadosTable;
    // End of variables declaration//GEN-END:variables
}
